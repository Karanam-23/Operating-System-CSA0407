#include <stdio.h>

int main() {
    int n, m;
    printf("Enter number of processes and resources: ");
    scanf("%d %d", &n, &m);

    int alloc[n][m], max[n][m], avail[m], need[n][m], finish[n], safe[n];

    printf("Enter Allocation Matrix:\n");
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++) scanf("%d", &alloc[i][j]);

    printf("Enter Maximum Matrix:\n");
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++) scanf("%d", &max[i][j]);

    printf("Enter Available Resources: ");
    for(int j=0;j<m;j++) scanf("%d", &avail[j]);

    // Calculate Need Matrix
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++) need[i][j] = max[i][j] - alloc[i][j];

    for(int i=0;i<n;i++) finish[i]=0;
    int count=0;

    while(count<n){
        int found=0;
        for(int i=0;i<n;i++){
            if(!finish[i]){
                int j;
                for(j=0;j<m;j++) if(need[i][j]>avail[j]) break;
                if(j==m){ // safe to allocate
                    for(int k=0;k<m;k++) avail[k]+=alloc[i][k];
                    safe[count++] = i;
                    finish[i]=1;
                    found=1;
                }
            }
        }
        if(!found) break;
    }

    if(count==n){
        printf("System is in a safe state.\nSafe sequence: ");
        for(int i=0;i<n;i++) printf("P%d ", safe[i]);
        printf("\n");
    } else printf("System is not in a safe state.\n");

    return 0;
}
